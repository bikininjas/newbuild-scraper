name: Price Scraper

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:


jobs:
  lint_test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint (Black)
        run: black --check .
      - name: Validate products.json
        run: python scripts/validate_products_json.py
      - name: Run unit tests
        run: pytest -q
  scrape:
    timeout-minutes: 120
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/alternative_components') }}
    needs: lint_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install Playwright
        run: |
          pip install playwright black
          npx playwright install-deps
          python -m playwright install

      - name: Run scraper
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: python src/main.py
      - name: Commit price history (if changed)
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add data/ output.html historique_prix.csv scraper.log || true
          git diff --cached --quiet || git commit -m "chore(ci): update price history"
          git pull --rebase --autostash
          git push

  push-output-html-gcs:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    needs: scrape
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Sanity print hash
        run: git rev-parse --short HEAD
      - name: Check output.html is non-empty and valid
        id: check_output
        run: |
          if [ ! -s output.html ]; then
            echo "output.html is empty. Skipping upload."
            exit 1
          fi
          if ! grep -q '<title>' output.html; then
            echo "output.html missing <title> tag."
            exit 1
          fi
          if ! grep -qi '<body' output.html; then
            echo "output.html missing <body> tag."
            exit 1
          fi
          if ! grep -q '<ul' output.html; then
            echo "output.html missing <ul> tag."
            exit 1
          fi
      - name: Set up authentication
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCS_BUCKET_SVC_ACCOUNT_JSON_KEY }}'
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Upload output.html to GCS bucket
        run: |
          gsutil cp output.html gs://${{ secrets.GCS_BUCKET_NAME_NEWPC }}/output.html
